Tue 23 Sep 08:06:06 PDT 2025

Previously i included tasks.py from the tmtrack project as context, but
the LLM didn't successfully detect the REST stuff from it, so I'm going to
lay it out explicitly in the background context.

<background_context>
We are making a simple, standards compliant Javascript JQuery application
that implements the user interface of a simple time tracking application
called tmtrack-ui, or Time Tracker User Interface.

The following defines the REST API schema:

Base REST API URL is /api/v1/tasks
* GET /api/v1/tasks                     - returns all tasks
* GET /api/v1/tasks/<string:task_id>    - returns task whose primary key is task_id
* PUT /api/v1/tasks/<string:task_id>    - modifies task whose primary key is task_id
* POST /api/v1/tasks                    - create a new task

The document will contain at a minimum the following attributes:

* task_id : a required string that contains a synthetic UUID created upon
            document creation
* userid : a required string that contains the userid of the person doing the
           task
* date : the required calendar date on which the task is to be done
* task_name : a required string that is the name of the task
* category : a required string that is the category of the task
* expected_hours : a required float containing the number of hours the task
                   is expected to take
* actual_hours : an optional float containing the number of hours the task
                 actually took
* description : an optional large string that contains text allowing the user
                to add some context about this task

The unique, primary key for each document is task_id.



This project should be made as simply as possible given the requirements,
with a minimum of extras.
This project's code, design and layout must be focused on newcomers to
Javascript and JQuery.

The web app should have a the following features:

    * The left side of the screen should contain a clickable list of 
      available days (some standard month, day, year format) as fetched with
      the REST API.  These should be sorted with the most recent day first.
    * There should be a button on the top left, above the dates, that will
      create a new day, which will trigger POST REST API.
    * When one of the days is clicked, the clicked day on the left should be
      highlighted.
    * All of the data in the clicked day should be reproduced in the main
      panel of the app, covering most of the right side of the screen.
    * All of the field values should be editable.
    * There should be a button on the right side of the screen that saves
      modifications back through the REST API.
    * Newly created days, as describe previously, should bring up the same
      basic web form on the right side of the screen, as described above.

The styling, font and other user interface elements should be simple, clean,
straightforward and modern.

The REST API should be assumed to be running on http://localhost:5000/ with
endpoints described in the attached file.  Do not use any mock libraries for
testing or any other purpose.  Always use the real REST API found at 
http://localhost:5000/

</background_context>


<create_project>
Please create this project as defined above, including all of the necessary
directory structure, configuration and support files.

This project will be developed, tested and deployed on Ubuntu Linux version 24.

This project will be hosted on github, please include all standard support and 
documentation files appropriate for a new github, javascript JQuery
project.

Please describe in extreme detail all of the steps required for all stages of
the project development, testing and simple production deployment using the
Ubuntu command line.  This has to include project initiation steps, testing
steps, iteration steps, and deployment steps.

</create_project>


Tue 23 Sep 08:50:37 PDT 2025
<fix-initial-runtime-errors> # depreciated
When the above project is run, the following errors are reported on the
web page http://localhost:3000/


Uncaught runtime errors:
Ã—
ERROR
Failed to fetch
TypeError: Failed to fetch
    at getTasks (http://localhost:3000/static/js/bundle.js:22688:26)
    at fetchTasks (http://localhost:3000/static/js/bundle.js:22023:87)
    at http://localhost:3000/static/js/bundle.js:22020:5
    at Object.react_stack_bottom_frame (http://localhost:3000/static/js/bundle.js:15963:18)
    at runWithFiberInDEV (http://localhost:3000/static/js/bundle.js:3881:68)
    at commitHookEffectListMount (http://localhost:3000/static/js/bundle.js:8872:618)
    at commitHookPassiveMountEffects (http://localhost:3000/static/js/bundle.js:8909:56)
    at commitPassiveMountOnFiber (http://localhost:3000/static/js/bundle.js:9811:25)
    at recursivelyTraversePassiveMountEffects (http://localhost:3000/static/js/bundle.js:9802:104)
    at commitPassiveMountOnFiber (http://localhost:3000/static/js/bundle.js:9851:9)
ERROR
Failed to fetch
TypeError: Failed to fetch
    at getTasks (http://localhost:3000/static/js/bundle.js:22688:26)
    at fetchTasks (http://localhost:3000/static/js/bundle.js:22023:87)
    at http://localhost:3000/static/js/bundle.js:22020:5
    at Object.react_stack_bottom_frame (http://localhost:3000/static/js/bundle.js:15963:18)
    at runWithFiberInDEV (http://localhost:3000/static/js/bundle.js:3881:68)
    at commitHookEffectListMount (http://localhost:3000/static/js/bundle.js:8872:618)
    at commitHookPassiveMountEffects (http://localhost:3000/static/js/bundle.js:8909:56)
    at reconnectPassiveEffects (http://localhost:3000/static/js/bundle.js:9865:9)
    at recursivelyTraverseReconnectPassiveEffects (http://localhost:3000/static/js/bundle.js:9856:66)
    at reconnectPassiveEffects (http://localhost:3000/static/js/bundle.js:9879:9)

Please provide the necessary fixes for these errors.
</fix-initial-runtime-errors>


<fix-initial-runtime-errors-v2> # depreciated
The application is using the URL /tasks for the REST API which is incorrect.  The correct REST API URL is /api/v1/tasks
Please re-write the application to accurately reflect this.
</fix-initial-runtime-errors-v2>


<fix-jquery-tasks-sort>

Upon page load, the following error occurs:

Uncaught TypeError: tasks.sort is not a function
    at Object.success (app.js:12:43)
    at c (jquery-3.6.0.min.js:2:28327)
    at Object.fireWith [as resolveWith] (jquery-3.6.0.min.js:2:29072)
    at l (jquery-3.6.0.min.js:2:79901)
    at XMLHttpRequest.<anonymous> (jquery-3.6.0.min.js:2:82355)

Please update the application to resolve this error.
</fix-jquery-tasks-sort>


<add-debugging-to-see-errors>
Please modify the app to display all headers and diagnostics when any REST
call does not return successfully.
</add-debugging-to-see-errors>


<make-error-selectable>
When an REST call fails, I see an error popup, but I am unable to select
any of the text with my mouse.  Please modify the application so that I can
select the text of the popup with my mouse.

</make-error-selectable>

<fix-float-int-error>
When clicking the New Day button, the following error is reported: 

Error Context: Failed to save the task.

Status Code: 400 (BAD REQUEST)
Text Status: error
Error Thrown: BAD REQUEST

--- Response Headers ---
content-length: 200
content-type: application/json

--- Response Body ---
{"errors":{"actual_hours":"'actual_hours' must be of type float, but got int.","expected_hours":"'expected_hours' must be of type float, but got int."},"message":"Validation failed","status":"error"}

Please modify the application to resolve this error.

</fix-float-int-error>


<fix-float-int-error-2>
When clicking the New Day button, the following error is reported:

Error Context: Failed to save the task.

Status Code: 400 (BAD REQUEST)
Text Status: error
Error Thrown: BAD REQUEST

--- Response Headers ---
content-length: 200
content-type: application/json

--- Response Body ---
{"errors":{"actual_hours":"'actual_hours' must be of type float, but got int.","expected_hours":"'expected_hours' must be of type float, but got int."},"message":"Validation failed","status":"error"}

Your last updates did not fix this.  Please modify the application to resolve this error.
</fix-float-int-error-2>

We are now successfully saving new tasks.

<fix-undefined-days>
The requested list of days on the left side of the app show as 'undefined'.  Further, it always shows
two days as 'undefined' no matter how many tasks are returned.  Please modify the application to
resolve this problem.
</fix-undefined-days>
We are now displaying dates correctly.

<fix-dates-not-populating>
When I click on one of the dates on the left side, the REST GET successfully fetches the
correct task, but the app does not populate the web form as requested.

Please modify the application to resolve this problem.

</fix-dates-not-populating>

And this now works.

<fix-number-validation-bug>
When I entered expected hours as 2.75 there was a popup error:

Please enter a valid value. The two nearest valid values are 2.7 and 2.8.

Please modify the application to resolve this problem.
</fix-number-validation-bug>

Fixed.

<make-new-day-default-to-todays-date>
Please change the application such that when New Day is clicked, the
date in the main form defaults to today's date.

</make-new-day-default-to-todays-date>

Works great.


But I really need to re-think the entire UI flow.

NOTE RUNNING:
$ python3 -m http.server 8000
# in tmtrack:
$ flask run

http://127.0.0.1:8000/


Fri 26 Sep 08:04:42 PDT 2025
Thinking more about the fundamental flow of the application.

The edit pane should be day focused, not task focused.  When a day is
selected, all of the tasks for that day for that userid, if any, should be
displayed and made editable all at the same time.

Adding a new task for a day should be as simple as clicking an add button
in the editing pane a new, empty entry shows up.

So we should organize our entries horizontally I think, one 'line' per task.

The current date should be displayed prominently on the edit pane.

task_category(dropdown), task_name(single edit line), expected_hours(small float box), actual_hours(small float box), description(single edit line)

When we land on the app, it should display the oldest day that has any
task without an actual_hours attribute set.  Putting something in actual_hours
is how we say the task is dispositioned.

All of the days that have undispositioned tasks should be highlighted on the
left side.

If we click on new day, and there are no tasks with today's date, then
an edit form with today's date comes up with a blank task.  If we click on
new day and there are tasks for today's date, then we produce a popup date
picker and let the user pick a future date.  Only days that have no tasks can
be picked.  Once picked, same as above with the edit window showing a single
blank task.

Everywhere we see a date, we should also see a three letter day of the week 
with it.

<add-global-userid>
Above the New Day button, please add a the text "UserId" with a narrow 
textbox immediate to its right.  Both the text and the textbox should
remain above centered above the New Day button.

This textbox should be called userid.

Please modify the application appropriately.
</add-global-userid>

Worked, but it named the userid box "userid_filter", because there's
already a 'userid' in the form.

<rename-global-userid>
Please change the name and id of the userid text box to just "userid".

</rename-global-userid>

Fixed it.

<change-edit-pane-to-multi-tasks>
The main panel of the app, also known as the edit pane, should display
all of the tasks for the selected day.

Please replace the current form that only shows a single task with 
a list of all of the tasks for the selected day.  Each task in the list
should be displayed in a single line.  Each line should have the
following elements, which shall be called task_line, displayed from left
to right:
    * category - a required narrow width text box
    * task_name - a required medium width text box
    * expected_hours - a required number input box that accepts a floating
      point number
    * actual_hours - an optional number input box that accepts a floating
      point number
    * description - an optional medium width single line text box
    * save - a button that when clicked writes the current task_line back
      to the REST API

The existing form_userid textshould should not be displayed, and the 
userid attribute we added at the top should be used for all of the tasks
written back to the REST API.

Each input box for each task_line should have to the left of it then name of
the input box, and the entire line sbould be displayed in a somewhat compressed
format

On the top left of the edit pane add a button called "Add Task".  When clicked,
this button should add a new task_line to the edit pane, below the existing
lines.  This new line should be designed the same as the existing task lines.

All of the fields described above, category, task_name, expected_hours,
actual_hours, description should always be editable.

When the save button is clicked for a given task_line, successful validation
should be done for the fields in that task line prior to the task being
written back to the REST API.  Any validation errors should be provided in
an easy to see popup box that allows the text of the validation error to be
selected by the mouse.

Please modify the application to meet these criteria.
</change-edit-pane-to-multi-tasks>

<multi-users-pt1>
We need to add very basic multi user support.  There is a new REST API
whose route is /api/v1/users that returns this data structure:
 {
    "users" : [
       "userid1",
       "userid2"
    ]
 }

Please fetch these userids on startup and save them is an appropriately named
variable.

Also change the UserId text box on the top left to a drop down whose entries
are populated by the userids returned from /api/v1/users

The selected userid should be used in the saved tasks as before.

Please modify the application to reflect these changes.
</multi-users-pt1>

<multi-users-pt2>
Change the list of dates on the left side to only include dates that have
tasks for the currently selected userid.
Change the list of tasks for a given date in the edit pane to only include
tasks for the currently selected date and also for the currently
selected userid.  To be clear: we should only see dates and tasks related
to the selected userid.

These two changes imply that if no userid is selected, no dates or tasks
should be displayed.  As soon as a userid is selected, on click of the
drop down, the dates that contain tasks for the selected userid should
immediately be populated on the left, and the oldest date that has any
tasks without a defined actual_hours value should have all of its tasks
populated in the edit pane as before.
</multi-users-pt2>

<categories-editor>
There is a new REST route called categories.  A GET on the categories route
will return something like this:
 {
     "categories" : [
         "category1",
         "category2"
     ]
 }

In the same way, a PUT on the categories route will replace the entire,
single document with the value in the PUT request.  The PUT request will
have exactly the same document format as described above.

Please add a new button called 'Categories' between the New Day button
and the UserId dropdown.  When clicked, this Categories button will
produce a large modal box called 'Categories Editor' that has a list
of all of the categories supplied by the REST categories route defined
above.  The list of categories in Categories Editor will be editable.
Users should be able to add new categories, remove categories and
re-order categories.  At the bottom of Categories Editor will be
two buttons.  The first is 'Save' which will cause the current
list of categories in Categories Editor to be written back to the
REST API by the above describe PUT route and then cause the box to
disappear.  The second button is 'Cancel' which will cause the box to
disappear without writing any changes back.
</categories-editor>

The results are impressive.  It did exactly as requested but it also
implemented the next feature which I was going to ask for next.
It changed the category field of the task lines in the edit pane
to drop downs that match the values in the Categories Editor.

<highlight-unsaved-tasks>
In the edit pane, as tasks are added or edited, the line associated
with the newly added or edited task should be highlighted until it
is saved.  As soon as the task is saved to the REST API by clicking
the existing Save button, reverse the highlight of that line so
that it looks as it did before it was edited.
</highlight-unsaved-tasks>

<highlight-incomplete-days>
Each day on the left side that has any tasks with the actual_hours
attribute unset should be highlighted in a different way than the
currently selected day is highlighted.

Continue highlighting the currently edited day but also add a
different, subtle highlight to any of the other days that have
any tasks that don't have actual_hours set.
</highlight-incomplete-days>

<minimal-successful-task-save>
When a task is saved, instead of a popup box that says
"Task saved successfully!" that requires a mouse click of the OK
button, show some kind of brief message on the bottom of the screen
that requires no user intervention.  The message will not interfere
with any other clicks or actions, and disappear after a few seconds.
</minimal-successful-task-save>

<gemini-resync>
Please fully display all of the current code for this project as it
is at this time.
</gemini-resync>

<dates-have-days>
To the displayed dates on the left, to each add a three letter day of
the week at the end.  So "2025-09-24" should be displayed as
"2025-09-24 Wed" because September 24th, 2025 was a Wednesday.
The three letter day of the week should accurately reflect what day
of the week that day was.  Make no other changes to the app.
</dates-have-days>

<issue-8>
When multiple tasks are edited for a given day, and one is saved, other
edits are reverted.

For example: if I have two tasks for a given day, both of which have actual hours populated to 2, and I change the actual hours of both of them to 3, then click save on one, that task is saved but the edit to the other, from 2 to 3, is reverted back to 2.

Please change the app so that saving one task does not affect any
other tasks.
</issue-8>

Sent to Gemini to fix:
After this last change, any task that is saved now disappears.  The
saved task still appears in the backend is is saved correctly, but
it disappears from the user interface.  Please resolve.


Sent to Gemini to fix:
After this last change, if a day has only one task, and it is saved,
then the day on the left disappears.  The task is but it is no longer
considered in calculating which days to show on the left.


<no-delete-categories>
Change the Categories Editor such that only the userid "dana" can
delete categories.  For userid "dana" keep the existing delete
buttons, for every other userid, don't display the delete buttons.
Make no other changes to the application.
</no-delete-categories>

<remember-userid>
Make the selected userid persist across visits to the app using
a very long-term cookie.  When someone selects the userid, and then
loads the app in the same browser, the userid they selected should
continue to be the same.

Make no other changes to the behaviour of the app.
</remember-userid>

<reorder-categories>
Change the Categories Editor to allow the user to drag and drop the
existing categories into any desired order.  Clicking the Save button
will write those categories back to the API in the newly presented
order.

</reorder-categories>


<display-days-on-load>
Ensure that the relevant days are displayed when the app is loaded
especially given a pre-defined userid.  Right now, the app does not
show any days when it is loaded.

Please display all changed files in full.
</display-days-on-load>


<only-quarter-hours-allowed>
Change the expected_hours and actual_hours fields in the edit pane so that
only quarter hours can be entered.  Please continue to use floats, but
the only allowed fractional parts can be .0, .25, .5 and .75.  Integers
are also allowed.

For example, the following values are allowed:

3
1.25
2.0
0.75

The following values are not allowed:

3.2
1.
0.9
2.1

To each number entry box, add a tiny pair of up and down arrows on the
right side.  Clicking the up arrow increments the value by 0.25, and
clicking the down arrow decrements the value by 0.25.  A blank entry box
will also have the arrows with an assumed (but not shown) initial value
of 0.  So if an empty box has its up arrow clicked, it will be changed
to 0.25.

Please also enforce the lowest number which is zero.  No negatives allowed.

Ensure no that no other changes in the app are made, and the app acts
exactly the same after your changes, except as described.

Please display all changed files in full.
</only-quarter-hours-allowed>

<highlight-undispositioned-tasks>
Please add a subtle highlight to any task in the edit pane that does not
have an actual hours attribute set.  This is the same criteria used to
highlight days on the left side that have one or more tasks that need
to be dispositioned.

Make no other changes to the apps behaviour.

Please display all changed files in full.
</highlight-undispositioned-tasks>

<testing-with-cypress>
We need automated testing of this javascript application, and we are
going to use the cypress https://www.cypress.io/

Please provide detailed instructions in the README.md file for how to
install, setup, use and maintain a headless cypress testing setup.

Produce all of the files needed in full necessary to accomplish this.

When you are done, I want a command-line invocation that will load the
web app, headless, and verify that the app loaded correctly.

I also want a second test to select the userid "dana", select an existing
day, and verify that tasks are presented in the edit pane.

Ensure that there are no changes to the app itself.  You are to only add
basic testing functionality.

Please display all changed or added files in full.
</testing-with-cypress>

Error:

After following these instructions, the following error occurs:
Opening Cypress...

DevTools listening on ws://127.0.0.1:38837/devtools/browser/baa395c2-ced0-43c3-b7fb-2ace85ada946
Your project does not contain a default supportFile. We expect a file matching cypress/support/e2e.{js,jsx,ts,tsx} to exist.

If a support file is not necessary for your project, set supportFile to false.

https://on.cypress.io/support-file-missing-or-invalid

Please provide the necessary fixes, and display all changed or added files in full.

The above fixed it, though the tests are still mocked.

Next prompt:
Please modify the necessary files to do the end to end cypress testing with no
mocks or mock objects.  The test should invoke the application as it is
written and it should make all of the normal REST API calls to the backend.

Please provide the necessary changes, and display all changed or added files in full.

<categories-only-admin>
Please change the app such that the Categories button is only visible if the
userid is "dana".  There should be no other changes to the app.

Please provide the necessary changes, and display all changed or added files in full.
</categories-only-admin>

<auth-and-authen-headers>
When the app is loaded, look for a URL parameter called "auth_token",
which, if passed, will contain an authentication token.  If the "auth_token"
parameter is not passed, assume the default auth_token value of "none".
Please modify every REST API HTTP call to include the
"Authorization" HTTP header.

For example, if the following URL is passed to the app:
http://localhost:5000/?auth_token=330829f6cb0b17ff21f5

Then the following HTTP header must be passed to every subsequent REST
call:

"Authorization: Bearer 330829f6cb0b17ff21f5"

Another example, given the following URL:

http://localhost:5000/

Then the following HTTP header must be passed to every subsequent REST
call:

"Authorization: Bearer none"

No other application behaviour should change.  

Please provide the necessary changes, and display all changed or added files in full.
</auth-and-authen-headers>

<verify-authentication-headers>
Under the UserId field on the top left, please display a compact, nicely
formatted list of all of the groups returned from the first available
REST API response.  Also display, separately, but in the same area, the
userid returned from the first available REST API response.

These changes should have no impact on any function of the app, and should
only displayed.  Ensure that the information is displayed, even if it
becomes available after the main page load.

No other application behaviour should change.  

Please provide the necessary changes, and display all changed or added files in full.
</verify-authentication-headers>

<migrate-auth-to-headers>
Please remove the UserId drop down on the top left and the associated
text label.  The UserID for the entire app is to be set by the UserID
that comes back from the REST API responses.

Every task created by the app should use the UserId that came back from
the REST API responses.

Please only display the Categories button if the current user is in the
group "Administrators".

No other application behaviour should change.  

Please provide the necessary changes, and display all changed or added files
in full.
</migrate-auth-to-headers>

<fix-for-above>
The last set of changes you provided produced an application that displays
nothing except on the top left a New Day button and an Add Task button
on the top.  There are no Javascript or REST API errors.  The cypress
tests also fail.

Please provide the necessary fixes, and display all changed or added files
in full.
</fix-for-above>

<another-small-fix>
The app is working correctly except that we no longer see the current userid
and groups displayed at the top left.  Please ensure that these two are
displayed in a compact but easy to read format on the very top left.

Please provide the necessary fixes, and display all changed or added files
in full.
</another-small-fix>

Began using gemini-cli

<get-tests-in-order>
Right now, the app is working as expected, but the tests are not passing.

Every test should use New Day to add a new day, and then use Add Task to
add a task to that new day, and then Save to save the change, and then
re-load the app, clicking on the new day and verifying the just added
task is there.

Tests should always use the live app, without any mocking or mock objects.
It is encouraged to add extra test data into the live application.

Please make the requested changes to the test suite.
</get-tests-in-order>

<show-multi-user>
There is currently a box on the top left that shows the authenticated
userid and also the groups that userid is in.  Please move that information
to the top of the screen, right of the Add Task button.

### FIX:

There used to be a list of dates on the left side of the screen, after
your last change, those all disappeared.

For the currently authenticated userid, we should see all of the dates 
the left that have tasks for the userid, along with all of the other
features in place before your last change.

Please resolve.

### That worked.

Please write a test that will catch any future changes that cause the
dates on the left to be missing.

### That also worked.

Above the New Day button, on the far top left, please add a drop-down
that shows the unique set of userIDs that are seen in all of the tasks
returned by the tasks REST route.  This drop down should have the currently
authenticated userid set as the default.

### This worked better than expected.  When another userid was selected, the
### tasks changed with it, which was going to be my NEXT change.

Only display the New Day button if the currently selected Viewing User is the
same as the currently authenciated user.

### This worked perfectly.

Only display the Save button next to each task if the currently selected
Viewing User is the same as the currently authenciated user.

### This also worked.

Only allow the various attributes in each displayed task line to be visible if
the currently selected Viewing User is the same as the currently authenciated
user.
</show-multi-user>

<show-bigger-day>
Show the currently selected day in large text to the right of the Add Task
button.  This date should follow the following format example for
2025-10-03:

Display this: Friday October 03 2025

Make no other changes to the application.

</show-bigger-day>


<make-userid-bigger>
Make the Userid: text (on the top right) and the userid to its right
much larger.  Make no other changes to the application.

</make-userid-bigger>

<remove-add-task-for-viewed-user>
Please remove the failing test.

Please write a set of tests from scratch that provide reasonable coverage
with the cypress test framework.

Please try harder to correct the failing tests.

Please change the application to only show the Add Task button if the
currently viewed userid is the same as the currently authenticated userid.
No need to change or update any tests.

</remove-add-task-for-viewed-user>


<make-some-tests>
As seen by $ npm run cy:test please add a simple test that loads the app and
adds a new day, adds a task to that day and saves the task.
</make-some-tests>

<new-day-test-failing>
Please fix the failing new day test, as detected by npm run cy:run.

</new-day-test-failing>

<delete-tasks>
For those displayed tasks that are owned by the currently authenciated userid,
please add a Delete button to the left of each task line.  If pressed, the
given task line will be removed and a DELETE called on the REST API for the
specified task.

Please change no other behaviour in the application.

Please fix the following error when a task is saved:
REST API Error
Failed to save task.
Status: 400
Response: {"errors":{"actual_hours":"'actual_hours' must be of type float, but got str.","expected_hours":"'expected_hours' must be of type float, but got str."},"groups":["Hunny Bunnies"],"message":"Validation failed","status":"error","userid":"michelle"}

Please change no other behaviour in the application.


Please fix the following error when a task is saved:
Failed to save task.
Status: 400
Response: {"errors":{"actual_hours":"'actual_hours' must be of type float, but got NoneType."},"groups":["Hunny Bunnies"],"message":"Validation failed","status":"error","userid":"michelle"}

When I save an already existing task, it appears as a duplicate.  Please
resolve.

</delete-tasks>

<fix-local-validation>
The application works perfectly in production, but it is broken for local
development.  For local development only, all REST API URLs should start
with http://localhost:5000/api/v1/... 

Right now, when the app is loaded locally, the following javascript error
is seen: GET http://localhost:8000/api/v1/users 404 (File not found)

This makes sense because the REST API is listening on port localhost:5000.

This remains true in dev and prod: the REST API server is always listening
on localhost:5000 but in prod, it's also available through the same basic
URL path as the app.

Please change the app such that, when running locally for testing, the app
always uses the URL prefix http://localhost:5000/api/v1/  

Nothing else in the app should change, and it should still run in production.

</fix-local-validation>

<grow-description-field>
The Description textbox needs to be changed so that as new text/lines are
added, it grows vertically, without limit, of course only when editable.

You might need to change that into some kind of text area.

When the Description is displayed, all of the text should be visible,
no matter how much vertical space is required.

</grow-description-field>


<remove-auth-token-from-url>
The auth_token that is optionally passed into the URL, after it is
extracted and saved for use in the authentication header, should be
immediately removed from the browser URL bar.

After the app loads with ?auth_token=<something> in the URL, that
<something> should be saved and used as it currently is by the app, and
then the ?auth_token=<something> needs to no longer be visible in the URL.

This change should have no impact on the app's behaviour.

</remove-auth-token-from-url>

<refresh-manual-and-auto>
Please add a button on the top left of the edit pane called 'Refresh'.
When clicked, this causes GET /api/v1/tasks to be pulled with the
currently authenticated userid and the current app state updated
appropriately.  The currently selected day should not change, and
any task edits in progress should not be disturbed.

This change should have no impact on the app's behaviour beyond adding
the Refresh button.

## worked great

Every ten seconds, please trigger a Refresh, as if the Refresh button
had been pressed.  There should be no user visiblity that this is happening,
the currently selected day should not change, and any task edits in progress
should not be disturbed.

This change should have no impact on the app's behaviour beyond adding
an automatic, background refresh.

</refresh-manual-and-auto>
